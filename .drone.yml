kind: pipeline
type: kubernetes
name: default

steps:
- name: sonarqube
  image: k3d-registry.nemonik.com:5000/nemonik/golang-sonarqube-scanner:latest
  commands:
  - export DRONESRC=`pwd`
  - export GOBIN=$GOPATH/bin
  - export PATH="$GOBIN:$PATH"
  - mkdir -p $GOPATH/src/github.com/nemonik
  - cd $GOPATH/src/github.com/nemonik
  - ln -s $DRONESRC helloworld-web
  - cd helloworld-web
  - golangci-lint run --out-format checkstyle > tests/reports/golangci-lint.xml || true
  - go test -v ./... -coverprofile=tests/reports/coverage.out || true
  - sonar-scanner || true

- name: build
  image: k3d-registry.nemonik.com:5000/golang:1.16.5
  commands:
  - make build

- name: publish
  image: plugins/docker
  settings:
    storage_driver: overlay
    insecure: true
    registry: k3d-registry.nemonik.com:5000
    repo: k3d-registry.nemonik.com:5000/nemonik/helloworld-web
    force_tag: true
    tags:
    - latest

- name: deploy
  image: k3d-registry.nemonik.com:5000/nemonik/drone-kubectl:1.21.2
  settings:
    kubernetes_cert:
      from_secret: k8s_cert
    kubernetes_token:
     from_secret: k8s_token
  commands:
  - kubectl delete -f kubernetes/helloworld-web.yaml 2> /dev/null
  - kubectl apply -f kubernetes/helloworld-web.yaml
  - kubectl wait --for=condition=ready pod -n helloworld-web -l app.kubernetes.io/component=helloworld-web --timeout=180s

- name: inspec
  image: k3d-registry.nemonik.com:5000/nemonik/drone-inspec:latest
  settings:
    kubernetes_cert:
      from_secret: k8s_cert
    kubernetes_token:
     from_secret: k8s_token
  commands:
  - inspec exec tests/inspec/helloworld-web/. --chef-license=accept-silent

- name: selenium
  image: k3d-registry.nemonik.com:5000/nemonik/poetry:latest
  commands:
  - cd tests/selenium/func-test-helloworld-web
  - export SELENIUM_HOST=localhost
  - export SELENIUM_PORT=4444
  - export HELLOWORLD_WEB_URL=https://helloworld.nemonik.com
  - poetry install
  - poetry run python func_test_helloworld_web/test.py -v 

- name: owasp-zap
  image: k3d-registry.nemonik.com:5000/owasp/zap2docker-stable:2.8.0
  commands:
  - zap-baseline.py -t http://helloworld.nemonik.com

services:
- name: chrome
  image: k3d-registry.nemonik.com:5000/selenium/standalone-chrome:3.141
  volumes:
  - name: shared_memory
    path: /dev/shm

volumes:
- name: docker
  host:
    path: /var/run/docker.sock


